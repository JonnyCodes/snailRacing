{"mappings":"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","sources":["<anon>","src/pages/finished.tsx","src/components/FinishTable/index.tsx","src/components/Podium/index.tsx"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire4cf8\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire4cf8\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n// libraries\n\nvar $ayMG0 = parcelRequire(\"ayMG0\");\n\nvar $acw62 = parcelRequire(\"acw62\");\n\nvar $aRPiL = parcelRequire(\"aRPiL\");\n\nvar $9Blbd = parcelRequire(\"9Blbd\");\n\nvar $ayMG0 = parcelRequire(\"ayMG0\");\n\nconst $66dcc7aaa4d76294$export$7bb3c595864bfcd7 = (props)=>{\n    return /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n        id: \"finishTable\",\n        children: /*#__PURE__*/ (0, $ayMG0.jsx)(\"ul\", {\n            children: props.snails.map((snail, index)=>{\n                return /*#__PURE__*/ (0, $ayMG0.jsxs)(\"li\", {\n                    children: [\n                        /*#__PURE__*/ (0, $ayMG0.jsxs)(\"span\", {\n                            className: \"placeAndName\",\n                            children: [\n                                index + 1,\n                                \": \",\n                                snail.name\n                            ]\n                        }),\n                        /*#__PURE__*/ (0, $ayMG0.jsx)(\"span\", {\n                            className: \"time\",\n                            children: (snail.time / 1000).toFixed(3)\n                        })\n                    ]\n                }, snail.number);\n            })\n        })\n    });\n};\n\n\n\nvar $jXtmt = parcelRequire(\"jXtmt\");\n\nvar $ayMG0 = parcelRequire(\"ayMG0\");\n\nvar $iuB9z = parcelRequire(\"iuB9z\");\n\nvar $84MTf = parcelRequire(\"84MTf\");\n\nvar $acw62 = parcelRequire(\"acw62\");\nconst $fde9e226561736bf$export$8764c34cf73bfa39 = (props)=>{\n    const renderFinalScreen = async (snailsConfig)=>{\n        const pixiApp = new (0, $iuB9z.Application)();\n        const snails = [];\n        const loadPromises = [\n            (0, $iuB9z.Assets).load({\n                alias: \"podium\",\n                src: \"./podium.png\"\n            })\n        ];\n        [\n            snailsConfig[0],\n            snailsConfig[1],\n            snailsConfig[2]\n        ].forEach((snailConfig)=>{\n            const snail = new (0, $84MTf.Snail)(snailConfig);\n            snails.push(snail);\n            loadPromises.push(snail.load(snailConfig.bodyAssetNum));\n        });\n        Promise.all(loadPromises).then(()=>{\n            pixiApp.init({\n                width: 550,\n                height: 350,\n                backgroundColor: 0xb7e7fa,\n                backgroundAlpha: 0,\n                sharedTicker: true\n            }).then(()=>{\n                document.getElementById(\"podium\").appendChild(pixiApp.canvas);\n                renderPodium(pixiApp.stage, snails);\n                pixiApp.resize();\n            });\n        });\n    };\n    function renderPodium(stage, snails) {\n        const podium = (0, $iuB9z.Sprite).from(\"podium\");\n        podium.scale.set(0.075);\n        podium.anchor.set(0.5, 1);\n        podium.position.set(275, 350);\n        stage.addChild(podium);\n        const snail1 = snails[0].create();\n        snail1.scale.set(0.5);\n        snail1.position.set((550 - snail1.width) / 2, 65);\n        stage.addChild(snail1);\n        const snail2 = snails[1].create();\n        snail2.scale.set(0.5);\n        snail2.position.set((550 - snail1.width) / 4, 115);\n        stage.addChild(snail2);\n        const snail3 = snails[2].create();\n        snail3.scale.set(0.5);\n        snail3.position.set((550 - snail1.width) / 4 * 3, 130);\n        stage.addChild(snail3);\n    }\n    (0, $acw62.useEffect)(()=>{\n        renderFinalScreen(props.snails);\n    }, []);\n    return /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n        id: \"podium\"\n    });\n};\n\n\n// vvvvvvvv Render the results and sponsor images vvvvvvvvvv\nconst $7498f3248e8c0aac$var$App = ()=>{\n    const urlParams = new URLSearchParams(window.location.search);\n    const snails = urlParams.get(\"snails\");\n    const snailsWithTime = JSON.parse(snails);\n    const raceName = urlParams.get((0, $jXtmt.RACE_NAME_KEY));\n    const raceSponsorName = urlParams.get((0, $9Blbd.RACE_SPONSOR_NAME_KEY));\n    const raceSponsorLogo = urlParams.get((0, $9Blbd.RACE_SPONSOR_LOGO_KEY));\n    return /*#__PURE__*/ (0, $ayMG0.jsxs)((0, (/*@__PURE__*/$parcel$interopDefault($acw62))).Fragment, {\n        children: [\n            (raceName || raceSponsorName || raceSponsorLogo) && /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                id: \"raceDetails\",\n                children: [\n                    /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                        id: \"nameAndSponsor\",\n                        children: [\n                            raceName && /*#__PURE__*/ (0, $ayMG0.jsx)(\"h1\", {\n                                children: raceName\n                            }),\n                            raceSponsorName && /*#__PURE__*/ (0, $ayMG0.jsx)(\"h2\", {\n                                children: raceSponsorName\n                            })\n                        ]\n                    }),\n                    raceSponsorLogo && /*#__PURE__*/ (0, $ayMG0.jsx)(\"img\", {\n                        src: raceSponsorLogo\n                    }),\n                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"br\", {}),\n                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"hr\", {}),\n                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"br\", {})\n                ]\n            }),\n            /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                id: \"podiumAndTable\",\n                children: [\n                    /*#__PURE__*/ (0, $ayMG0.jsx)((0, $fde9e226561736bf$export$8764c34cf73bfa39), {\n                        snails: snailsWithTime\n                    }),\n                    /*#__PURE__*/ (0, $ayMG0.jsx)((0, $66dcc7aaa4d76294$export$7bb3c595864bfcd7), {\n                        snails: snailsWithTime\n                    })\n                ]\n            })\n        ]\n    });\n};\nconst $7498f3248e8c0aac$var$domNode = document.getElementById(\"results\");\nconst $7498f3248e8c0aac$var$root = (0, $aRPiL.createRoot)($7498f3248e8c0aac$var$domNode);\n$7498f3248e8c0aac$var$root.render(/*#__PURE__*/ (0, $ayMG0.jsx)($7498f3248e8c0aac$var$App, {}));\n\n\n//# sourceMappingURL=finished.0bd3c888.js.map\n","// libraries\nimport React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { Application, Assets, Container, Graphics, Point, Sprite, Text } from \"pixi.js\";\n\n// types\nimport { ISnailWithTime } from \"types/snail\";\nimport { Snail } from \"../snail\";\nimport { RACE_SPONSOR_LOGO_KEY, RACE_SPONSOR_NAME_KEY } from \"components/RaceSponsor\";\nimport { FinishTable } from \"components/FinishTable\";\nimport { RACE_NAME_KEY } from \"components/RaceName\";\nimport { Podium } from \"components/Podium\";\n\n\n// vvvvvvvv Render the results and sponsor images vvvvvvvvvv\nconst App = () => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const snails = urlParams.get(\"snails\");\n    const snailsWithTime: ISnailWithTime[] = JSON.parse(snails!);\n    const raceName = urlParams.get(RACE_NAME_KEY);\n    const raceSponsorName = urlParams.get(RACE_SPONSOR_NAME_KEY);\n    const raceSponsorLogo = urlParams.get(RACE_SPONSOR_LOGO_KEY);\n\n    return (\n        <React.Fragment>\n            {(raceName || raceSponsorName || raceSponsorLogo) &&\n                <div id=\"raceDetails\">\n                    <div id=\"nameAndSponsor\">\n                        {raceName && <h1>{raceName}</h1>}\n                        {raceSponsorName && <h2>{raceSponsorName}</h2>}\n                    </div>\n                    {raceSponsorLogo && <img src={raceSponsorLogo} />}\n                    <br />\n                    <hr />\n                    <br />\n                </div>\n            }\n            <div id=\"podiumAndTable\">\n                <Podium snails={snailsWithTime}/>\n                <FinishTable snails={snailsWithTime}/>\n            </div>\n        </React.Fragment>\n    );\n};\n\nconst domNode = document.getElementById(\"results\");\nconst root = createRoot(domNode!);\nroot.render(<App />);","import { ISnailWithTime } from \"types/snail\";\n\n// styles\nimport \"./styles.css\";\n\nexport const FinishTable = (props: { snails: ISnailWithTime[]}) => {\n    return (\n        <div id=\"finishTable\">\n            <ul>\n                {props.snails.map((snail, index) => {\n                    return <li key={snail.number}><span className=\"placeAndName\">{index + 1}: {snail.name}</span><span className=\"time\">{(snail.time / 1000).toFixed(3)}</span></li>\n                })}\n            </ul>\n        </div>\n    );\n};\n","import { ISnailWithTime } from \"types/snail\";\n\nimport { Application, Assets, Container, Sprite } from \"pixi.js\";\nimport { Snail } from \"../../snail\";\nimport { useEffect } from \"react\";\n\nexport const Podium = (props: { snails: ISnailWithTime[]}) => {\n\n    const renderFinalScreen = async (snailsConfig: ISnailWithTime[]) => {\n        const pixiApp = new Application();\n        const snails: Snail[] = [];\n    \n        const loadPromises = [\n            Assets.load({ alias: \"podium\", src: \"./podium.png\" })\n        ];\n    \n        [snailsConfig[0], snailsConfig[1], snailsConfig[2]].forEach((snailConfig) => {\n            const snail = new Snail(snailConfig);\n            snails.push(snail);\n            loadPromises.push(snail.load(snailConfig.bodyAssetNum));\n        });\n    \n        Promise.all(loadPromises).then(() => {\n            pixiApp\n                .init({\n                    width: 550,\n                    height: 350,\n                    backgroundColor: 0xb7e7fa,\n                    backgroundAlpha: 0,\n                    sharedTicker: true,\n                })\n                .then(() => {\n                    document.getElementById(\"podium\")!.appendChild(pixiApp.canvas);\n                    renderPodium(pixiApp.stage, snails);\n                    pixiApp.resize();\n                })\n        });\n    }\n    \n    function renderPodium(stage: Container, snails: Snail[]) {\n    \n        const podium = Sprite.from(\"podium\");\n        podium.scale.set(0.075);\n        podium.anchor.set(0.5, 1);\n        podium.position.set(550 / 2, 350);\n        stage.addChild(podium);\n    \n        const snail1 = snails[0].create();\n        snail1.scale.set(0.5);\n        snail1.position.set((550 - snail1.width) / 2, 65);\n        stage.addChild(snail1);\n    \n        const snail2 = snails[1].create();\n        snail2.scale.set(0.5);\n        snail2.position.set((550 - snail1.width) / 4, 115);\n        stage.addChild(snail2);\n    \n        const snail3 = snails[2].create();\n        snail3.scale.set(0.5);\n        snail3.position.set((550 - snail1.width) / 4 * 3, 130);\n        stage.addChild(snail3);\n    }\n\n    useEffect(() => {\n        renderFinalScreen(props.snails);\n    }, []);\n\n    return (\n        <div id=\"podium\"></div>\n    );\n};\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$ayMG0","$acw62","$aRPiL","$9Blbd","$66dcc7aaa4d76294$export$7bb3c595864bfcd7","props","jsx","children","snails","map","snail","index","jsxs","className","name","time","toFixed","number","$jXtmt","$iuB9z","$84MTf","$fde9e226561736bf$export$8764c34cf73bfa39","renderFinalScreen","snailsConfig","pixiApp","Application","loadPromises","Assets","load","alias","src","forEach","snailConfig","Snail","push","bodyAssetNum","Promise","all","then","width","height","backgroundColor","backgroundAlpha","sharedTicker","document","getElementById","appendChild","canvas","renderPodium","stage","podium","Sprite","from","scale","set","anchor","position","addChild","snail1","create","snail2","snail3","resize","useEffect","$7498f3248e8c0aac$var$domNode","$7498f3248e8c0aac$var$root","createRoot","render","a","urlParams","URLSearchParams","window","location","search","snailsWithTime","JSON","parse","get","raceName","RACE_NAME_KEY","raceSponsorName","RACE_SPONSOR_NAME_KEY","raceSponsorLogo","RACE_SPONSOR_LOGO_KEY","__esModule","default","Fragment"],"version":3,"file":"finished.0bd3c888.js.map"}